name: Publish Build

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      needs_release: ${{ steps.release_check.outputs.needs_release }}

    strategy:
      matrix:
        node-version: [16.x]

    
    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
    - name: Checkout repository
      uses: actions/checkout@main
    - name: Set up Node.js
      uses: actions/setup-node@main
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install --frozen-lockfile
  
    - name: Fetch previous commit for release check
      run: git fetch origin '${{ github.event.before }}'

    - name: Check if release
      id: release_check
      run: node scripts/check-if-release.js
      env:
        COMMIT_SHA_BEFORE: '${{ github.event.before }}'
    
    - name: build type declarations
      run: yarn tsc

    - name: build packages
      run: yarn build

  # A separate release build that is only run for commits that are the result of merging the "Version Packages" PR
  # We can't re-use the output from the above step, but we'll have a guaranteed node_modules cache and
  # only run the build steps that are necessary for publishing
  release:
    needs: build

    if: needs.build.outputs.needs_release == 'true'

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    env:
      CI: 'true'
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Set up Node.js
      uses: actions/setup-node@main
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install --frozen-lockfile

    - name: build type declarations
      run: yarn tsc

    - name: build packages
      run: yarn lerna run build --no-private

    - name: 'Login to npmjs npm repo .npmrc'
      shell: bash
      run: |
        echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_AUTH_TOKEN}}" >> .npmrc
        echo "always-auth = true" >> .npmrc
    # Publishes current version of packages that are not already present in the registry.
    - name: Run publish
      run: |
        lerna publish from-package --yes --no-verify-access
